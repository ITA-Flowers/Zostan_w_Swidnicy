version: '3.8'

services:

  maria:
    image: mariadb:11.1
    restart: always
    container_name: maria
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MARIADB_USER: ${MARIADB_USER}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}
      MARIADB_DATABASE: ${MARIADB_DATABASE}
    volumes:
      - ./db/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./db/scripts/populate.sql:/docker-entrypoint-initdb.d/populate.sql
      - ./db/vol:/var/lib/mysql
    ports:
      - 9306:3306
    healthcheck:
      test: mariadb -u ${MARIADB_USER} -p${MARIADB_PASSWORD} -h maria
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 10s

  employee:
    build:
      context: ./employee
      dockerfile: Dockerfile
    restart: always
    container_name: employee
    environment:
      MARIADB_SWIDNICA_USER: ${MARIADB_SWIDNICA_USER}
      MARIADB_SWIDNICA_PASSWORD: ${MARIADB_SWIDNICA_PASSWORD}
      MARIADB_DATABASE: ${MARIADB_DATABASE}
    ports:
      - 9030:8080
    depends_on:
      maria:
        condition: service_healthy

  employer:
    build:
      context: ./employer
      dockerfile: Dockerfile
    restart: always
    container_name: employer
    environment:
      MARIADB_SWIDNICA_USER: ${MARIADB_SWIDNICA_USER}
      MARIADB_SWIDNICA_PASSWORD: ${MARIADB_SWIDNICA_PASSWORD}
      MARIADB_DATABASE: ${MARIADB_DATABASE}
    ports:
      - 9020:8080
    depends_on:
      maria:
        condition: service_healthy

  identity:
    build:
      context: ./identity
      dockerfile: Dockerfile
    restart: always
    container_name: identity
    environment:
      AUTH_ALGHORITHM: ${AUTH_ALGHORITHM}
      AUTH_SECRET_KEY: ${AUTH_SECRET_KEY}
      AUTH_ACCESS_TOKEN_EXPIRES_MINUTES: ${AUTH_ACCESS_TOKEN_EXPIRES_MINUTES}
    ports:
      - 9010:8080
    depends_on:
      maria:
        condition: service_healthy

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: client
    ports:
      - 9080:5173
    depends_on:
      identity:
        condition: service_started